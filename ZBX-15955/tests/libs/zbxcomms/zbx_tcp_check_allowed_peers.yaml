# Both expected and peer is IPv4
---
test case: IPv4 match
in:
  allowed_peers: '127.0.0.1'
  peer: '127.0.0.1'
  family: 'AF_INET'
out:
  return: SUCCEED
---
test case: Second IPv4 from list matches
in:
  allowed_peers: '127.0.0.1,127.0.0.2'
  peer: '127.0.0.2'
  family: 'AF_INET'
out:
  return: SUCCEED
---
test case: Peer IP is different
in:
  allowed_peers: '127.0.0.1'
  peer: '127.0.0.2'
  family: 'AF_INET'
out:
  return: FAIL
---
test case: Peer IP is different
in:
  allowed_peers: '127.0.0.1,127.0.0.2'
  peer: '126.0.0.1'
  family: 'AF_INET'
out:
  return: FAIL
# Both expected and peer is IPv6
---
test case: IPv6 match
in:
  allowed_peers: '2001:0db8:0000:0000:0000:ff00:0042:8329'
  peer: '2001:0db8:0000:0000:0000:ff00:0042:8329'
  family: 'AF_INET6'
out:
  return: SUCCEED
---
test case: IPv6 from list matches
in:
  allowed_peers: '2001:0db8:0000:0000:0000:ff00:0042:8330,127.0.0.1,2001:0db8:0000:0000:0000:ff00:0042:8329'
  peer: '2001:0db8:0000:0000:0000:ff00:0042:8329'
  family: 'AF_INET6'
out:
  return: SUCCEED
---
test case: Peer IPv6 is different
in:
  allowed_peers: '2001:0db8:0000:0000:0000:ff00:0042:8329'
  peer: '2001:0db8:0000:0000:0000:ff00:0042:8330'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: Peer IPv6 is different at start
in:
  allowed_peers: '2001:0db8:0000:0000:0000:ff00:0042:8329'
  peer: '3001:0db8:0000:0000:0000:ff00:0042:8330'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: Peer IP is not in list
in:
  allowed_peers: '3001:0db8:0000:0000:0000:ff00:0042:8329,2101:0db8:0000:0000:0000:ff00:0042:8329,2001:0db9:0000:0000:0000:ff00:0042:8329,2001:0db8:0100:0000:0000:ff00:0042:8329,2001:0db8:0000:0001:0000:ff00:0042:8329,2001:0db8:0000:0000:0000:ff10:0042:8329,2001:0db8:0000:0000:0000:ff00:0043:8329'
  peer: '2001:0db8:0000:0000:0000:ff00:0042:8329'
  family: 'AF_INET6'
out:
  return: FAIL
# Expected is IPv4 but connected is IPv6
---
test case: IPv6 compatible peer is connected
in:
  allowed_peers: '127.2.0.1'
  peer: '::127.2.0.1'
  family: 'AF_INET6'
out:
  return: SUCCEED
---
test case: IPv6 compatible expanded peer is connected
in:
  allowed_peers: '127.0.0.1'
  peer: '0:0:0:0:0:0:7F00:0001'
  family: 'AF_INET6'
out:
  return: SUCCEED
---
test case: IPv6 mapped peer is connected
in:
  allowed_peers: '127.0.0.1'
  peer: '::ffff:127.0.0.1'
  family: 'AF_INET6'
out:
  return: SUCCEED
---
test case: IPv6 mapped peer expanded is connected
in:
  allowed_peers: '127.0.0.1'
  peer: '0:0:0:0:0:FFFF:7F00:0001'
  family: 'AF_INET6'
out:
  return: SUCCEED
---
test case: IPv6 compatible peer mismatch IP
in:
  allowed_peers: '127.1.0.1'
  peer: '::127.2.0.1'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 compatible expanded mismatch
in:
  allowed_peers: '127.0.0.1'
  peer: '0:0:0:0:0:0:7F02:0001'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 mapped peer mismatch IP
in:
  allowed_peers: '127.1.0.1'
  peer: '::ffff:127.0.0.1'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 mapped peer expanded mismatch IP
in:
  allowed_peers: '127.1.0.1'
  peer: '0:0:0:0:0:FFFF:7F00:0001'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 peer partially compatible
in:
  allowed_peers: '127.0.0.1'
  peer: '::fffe:127.0.0.1'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 peer does not match IPv4
in:
  allowed_peers: '127.0.0.1'
  peer: '2001:0db8:0000:0000:0000:ff00:0042:8329'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 compatible expanded peer is connected, not in list
in:
  allowed_peers: '127.0.0.1'
  peer: 'F000:0:0:0:0:0:7F00:0001'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 compatible expanded peer is connected mismatch
in:
  allowed_peers: '127.0.0.1'
  peer: '0000:0001:0:0:0:0:7F00:0001'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 mapped expanded is connected mismatch
in:
  allowed_peers: '127.0.0.1'
  peer: 'FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:7F00:0001'
  family: 'AF_INET6'
out:
  return: FAIL
---
test case: IPv6 local ip mismatch IPv4 local IP
in:
  allowed_peers: '127.0.0.1'
  peer: '::1'
  family: 'AF_INET6'
out:
  return: FAIL
---
# Expected is IPv6 but connected is IPv4
test case: IPv6 local IP expected, but IPv4 local IP connected mismatch
in:
  allowed_peers: '::1'
  peer: '127.0.0.1'
  family: 'AF_INET'
out:
  return: FAIL
---
test case: IPv6 expanded local IP expected, but IPv4 local IP connected mismatch
in:
  allowed_peers: '0:0:0:0:0:0:0:0001'
  peer: '127.0.0.1'
  family: 'AF_INET'
out:
  return: FAIL
---
test case: IPv6 IP expected, but IPv4 local IP connected mismatch
in:
  allowed_peers: '2001:0db8:0000:0000:0000:ff00:0042:8329'
  peer: '127.0.0.1'
  family: 'AF_INET'
out:
  return: FAIL
...
